concurrency:
  cancel-in-progress: true
  group: E2E-K8S-${{ github.event.pull_request.number || github.ref }}
jobs:
  e2e-k8s:
    if: ${{ (needs.paths-filter.outputs.not-ignore == 'true') || (github.event_name
      == 'push') }}
    name: E2E-K8S-Execute
    needs: paths-filter
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        submodules: true
    - continue-on-error: true
      name: Build Image
      run: './mvnw -B clean package \

        -Dmaven.test.skip \

        -Dmaven.javadoc.skip \

        -Dspotless.skip=true \

        -Dmaven.checkstyle.skip \

        -Dmaven.deploy.skip \

        -Ddocker.push.skip=true \

        -Pdocker,release -Ddocker.tag=ci \

        -pl org.apache.dolphinscheduler:dolphinscheduler-alert-server \

        -pl dolphinscheduler-tools \

        -pl dolphinscheduler-api \

        -pl dolphinscheduler-master \

        -pl dolphinscheduler-worker -am

        '
    - continue-on-error: true
      name: Create k8s Kind Cluster
      run: '# install kubectl

        curl -LO "https://dl.k8s.io/release/v1.28.3/bin/linux/amd64/kubectl"

        sudo chmod +x kubectl

        sudo mv kubectl /usr/local/bin/kubectl


        # install kind

        curl -LO https://github.com/kubernetes-sigs/kind/releases/download/v0.20.0/kind-linux-amd64

        sudo chmod +x kind-linux-amd64

        sudo mv kind-linux-amd64 /usr/local/bin/kind

        kind version


        # create kind cluster

        kind_node_image="kindest/node:v1.23.17"

        echo "Kubernetes version: ${kind_node_image}"

        kind create cluster --name dolphinscheduler --image ${kind_node_image}

        kubectl version

        kubectl get all --all-namespaces

        '
    - continue-on-error: true
      name: Load images
      run: "components=(\"master\" \"worker\" \"api\" \"tools\" \"alert-server\")\n\
        for component in \"${components[@]}\"; do\n  kind load docker-image apache/dolphinscheduler-${component}:ci\
        \ --name dolphinscheduler\ndone\n"
    - continue-on-error: true
      name: Helm install dolphinscheduler
      run: "# install helm\ncurl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3\
        \ | bash\n\n# install ds chart via helm\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n\
        helm dependency update .\nhelm upgrade --install --create-namespace -n dolphinscheduler\
        \ dolphinscheduler . -f - <<EOF\nimage:\n  registry: apache\n  tag: ci\nmaster:\n\
        \  replicas: 1\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n\
        \    initialDelaySeconds: 120\nworker:\n  replicas: 1\n  livenessProbe:\n\
        \    initialDelaySeconds: 120\n  readinessProbe:\n    initialDelaySeconds:\
        \ 120\nalert:\n  livenessProbe:\n    initialDelaySeconds: 120\n  readinessProbe:\n\
        \    initialDelaySeconds: 120\napi:\n  livenessProbe:\n    initialDelaySeconds:\
        \ 120\n  readinessProbe:\n    initialDelaySeconds: 120\nEOF\n"
      working-directory: ${{ github.workspace }}/deploy/kubernetes/dolphinscheduler
    - continue-on-error: true
      name: Wait for pods
      run: "JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';\
        \ \ncomponents=(\"master\" \"worker\" \"api\" \"alert\")\nfor component in\
        \ \"${components[@]}\"; do\n  until kubectl -n dolphinscheduler get pods -l\
        \ app.kubernetes.io/component=${component} -o jsonpath=\"$JSONPATH\" 2>&1\
        \ | grep -q \"Ready=True\"; do\n    echo \"waiting for dolphinscheduler ${component}\
        \ to be available\"\n    sleep 10\n    kubectl get pods --all-namespaces\n\
        \    kubectl get events --all-namespaces\n    for pod in $(kubectl get pods\
        \ -n dolphinscheduler -o jsonpath='{.items[*].metadata.name}'); do\n     \
        \ echo \"logs for pod $pod:\"\n      kubectl logs --tail=1000 -n dolphinscheduler\
        \ $pod\n    done\n  done\ndone\n"
    timeout-minutes: 20
  paths-filter:
    name: E2E-K8S-Path-Filter
    outputs:
      not-ignore: ${{ steps.filter.outputs.not-ignore }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      id: filter
      uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721
      with:
        filters: "not-ignore:\n  - '!(docs/**)'\n"
name: E2E-K8S
on:
  repository_dispatch:
    types: trigger-ga___e2e-k8s.yml
