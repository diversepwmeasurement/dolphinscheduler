jobs:
  build:
    if: github.repository == 'apache/dolphinscheduler'
    permissions:
      contents: read
      packages: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-docker
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-maven-
    - continue-on-error: true
      name: Set environment variables
      run: "if [[ ${{ github.event_name }} == \"release\" ]]; then\n  echo \"DOCKER_REGISTRY=docker.io\"\
        \ >> $GITHUB_ENV\n  echo \"DOCKER_USERNAME=${{ secrets.DOCKERHUB_USER }}\"\
        \ >> $GITHUB_ENV\n  echo \"DOCKER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}\"\
        \ >> $GITHUB_ENV\n  echo \"HUB=apache\" >> $GITHUB_ENV\n  echo \"DOCKER_TAG=${{\
        \ github.event.release.tag_name }}\" >> $GITHUB_ENV\nelse\n  echo \"DOCKER_REGISTRY=ghcr.io/apache/dolphinscheduler\"\
        \ >> $GITHUB_ENV\n  echo \"DOCKER_USERNAME=${{ github.actor }}\" >> $GITHUB_ENV\n\
        \  echo \"DOCKER_PASSWORD=${{ secrets.GITHUB_TOKEN }}\" >> $GITHUB_ENV\n \
        \ echo \"HUB=ghcr.io/apache/dolphinscheduler\" >> $GITHUB_ENV\n  echo \"DOCKER_TAG=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nfi\n"
    - continue-on-error: true
      name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        password: ${{ env.DOCKER_PASSWORD }}
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      name: Build and push docker images
      run: './mvnw -B clean deploy \

        -Dmaven.test.skip \

        -Dmaven.javadoc.skip \

        -Dspotless.skip=true \

        -Dmaven.deploy.skip \

        -Ddocker.tag=${{ env.DOCKER_TAG }} \

        -Ddocker.hub=${{ env.HUB }} \

        -Pdocker,release

        '
    timeout-minutes: 30
name: publish-docker
on:
  repository_dispatch:
    types: trigger-ga___publish-docker.yaml
